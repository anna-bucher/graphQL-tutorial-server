# import Post, PostSubscriptionPayload, Vote, VoteSubscriptionPayload, PostOrderByInput from "./generated/prisma.graphql"

type Query {
  posts(filter: String, skip: Int, first: Int, orderBy: PostOrderByInput): Feed!
  user(id: ID!): User
  users: [User]!
}

type Feed {
  posts: [Post!]!
  count: Int!
}

type Mutation {
  writePost(title: String!): Post
  updateTitle(id: ID!, newTitle: String!): Post
  # Auth
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  # Voting
  vote(postId: ID!): Vote
}

type AuthPayload {
  token: String
  user: User
}

type Subscription {
  publications: PostSubscriptionPayload
  newPost: PostSubscriptionPayload
  newVote: VoteSubscriptionPayload
}

type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post!]
}